{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/gloablApi.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/wtacher.js","../src/vdom/index.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const strats = {};\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMounte',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n     /**\r\n     * {} {created:function(){}} => {created:[fn]}\r\n     * {created:function(){}} {created:[fn]} => {created:[fn,fn]}\r\n    */\r\n    strats[hook] = function(p,c) {\r\n        if(c){\r\n            if (p) {\r\n                return p.concat(c)\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p\r\n        }\r\n    }\r\n})\r\nexport function mergeOptions(parent,child) {\r\n    const options = {}\r\n    for (let key in parent) { // 对用户的options 老的进行循环\r\n       mergeField(key)\r\n    }\r\n    for (const key in child) {\r\n        if (!parent.hasOwnProperty(key)){\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        // 策略模式 用策略模式节省if else\r\n        if (strats[key]) {\r\n            options[key]= strats[key](parent[key],child[key])\r\n        }else {\r\n            // 如果不在策略中以儿子为主\r\n            options[key] = child[key] || parent[key]; // 优先采用儿子的，再采用父亲的 \r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    // 静态方法\r\nVue.options = {};\r\nVue.mixin = function (mixin) {\r\n    // 我们期望将用户的选项和全局的options 进行合并\r\n   this.options = mergeOptions(this.options,mixin)\r\n   return this\r\n}\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配到的是一个标签名 <div 匹配到的是开始标签\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配的是</xxx> 最终匹配到的是结束标签\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性\r\n// 第一个分组是属性的key value 就是分组3/4/5\r\nconst startTagClose = /^\\s*(\\/?)>/; // <div> <br />\r\n\r\n// vue3中没有采用正则\r\n\r\n// 对模板进行编译处理\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个<\r\n    // 最终需要转化成一颗抽象语法树\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3;\r\n    const stack = []; // 用于存放元素的\r\n    let currentParent; // 指向栈中的最后一个\r\n    let root; // 根节点\r\n\r\n    function createASTElment(tag,attrs) {\r\n        return {\r\n            tag,\r\n            type:ELEMENT_TYPE,\r\n            children:[],\r\n            attrs,\r\n            parent:null\r\n        }\r\n    }\r\n\r\n    // 利用栈型结构来构造一棵树\r\n    function start(tag,attrs) {\r\n       let node = createASTElment(tag,attrs) // 创造一个ast节点\r\n       if (!root) { // 看一下是否为空树\r\n           root = node // 为空 则第一个是当前节点的根节点\r\n       }\r\n       if (currentParent) {\r\n           node.parent = currentParent \r\n           currentParent.children.push(node)\r\n       }\r\n       stack.push(node);\r\n       currentParent = node \r\n        // console.log(stack,currentParent,'开始');\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g,'')\r\n        text &&currentParent.children.push({  // 文本直接放到当前指向的节点中\r\n            type:TEXT_TYPE,\r\n            text,\r\n            parent:currentParent\r\n        })\r\n        \r\n    }\r\n    function end(tag) {\r\n        stack.pop(); // 弹出最后一个\r\n        // console.log(stack);\r\n       currentParent = stack[stack.length -1]\r\n        \r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName:start[1], // 标签名\r\n                attrs:[], // 属性\r\n            }\r\n            advance(start[0].length);\r\n            // console.log(match,html);\r\n            // 如果不是开始标签的结束 那就一直匹配下去\r\n            let attr,end;\r\n            // 如果没有匹配到开始标签结束 同时 属性一直有\r\n            while (!(end =html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // debugger\r\n                advance(attr[0].length);\r\n                match.attrs.push({\r\n                    name:attr[1],\r\n                    value:attr[3]||attr[4]||attr[5] || true\r\n                })\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);  \r\n            }\r\n            return match\r\n            // console.log(match);\r\n        }\r\n        return false\r\n    }\r\n    while(html){\r\n        // debugger\r\n        // 如果textEnd为0 说明是一个开始标签或者结束标签\r\n        // 如果textEnd >0 说明就是文本结束的位置\r\n        let textEnd= html.indexOf('<'); // 如果indexOf中的索引是0 则说明是一个标签\r\n        if (textEnd === 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if(endTagMatch){\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0,textEnd); // 文本的内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)\r\n            }\r\n            \r\n        }\r\n    }\r\n    // console.log(root);\r\n    return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    // console.log(attrs);\r\n    let str = '' // 格式为{name,value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') {\r\n            // color:red  => {color:red}\r\n            let obj = {}\r\n            attr.value.split(\";\").forEach(item => {\r\n                let [key,value] = item.split(\":\");\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0,-1)}}`\r\n    \r\n}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{abcd}} 匹配到的内容就是我们表达式的内容\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        // 元素\r\n        return codegen(node)\r\n    } else {\r\n        // 文本\r\n        let text = node.text\r\n        if (defaultTagRE.test(text)) {\r\n            // 将{{hello}}hello 这样的格式处理成_s(hello)+'hello' \r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0;\r\n            while (match=defaultTagRE.exec(text)) {\r\n                let index = match.index\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex,index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index+match[0].length\r\n                // console.log(index,\"77\");\r\n                \r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n            \r\n        }else {\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\nfunction genChildren(children) {\r\n    if (children) {\r\n        return children.map(child => gen(child)).join(\",\")\r\n    }\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length> 0 ? genProps(ast.attrs):'null'}${ast.children.length>0 ?`,${children}`:\"\"})`)\r\n    return code\r\n}\r\n\r\n// 模板引擎的实现原理 with + new Function\r\nexport function compileToFunction(template){\r\n    // 1、就是将template转化成ast语法树\r\n    let ast = parseHTML(template)\r\n    // console.log(ast);\r\n    // 2、生成render方法(render方法执行后的结果就是虚拟DOM)\r\n    let code = codegen(ast)\r\n    code = `with(this) {return ${code}}`\r\n    let render = new Function(code); // 根据code生成render函数\r\n    // console.log(render.toString());\r\n    // function render() {\r\n    //     with(this) {return _c('div',{id:\"app\",style:{\"color\":\" red\",\"background\":\" yellow\"}},_c('div',{style:{\"color\":\" red\"}},_v(_s(name)+\"hello\"+_s(name)+\"red\")),_c('span',null,_v(_s(age))))}\r\n    // }\r\n    return render\r\n}","let id = 0;\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id++; //属性的dep需要去收集watcher\r\n        this.subs=[]; //当前属性对应的watcher有哪些\r\n    }\r\n    depend(){\r\n        // 不希望收集重复的watcher \r\n        // this.subs.push(Dep.target) // 会重复收集 \r\n        // 让watcher记住dep\r\n        Dep.target.addDep(this); // Dep.target 指向的是watcher\r\n        /**\r\n         * dep 和 watcher是一个多对多的关系（一个属性可以在多个组件中使用 deep-> 多个watcher）\r\n         * 一个组件中由多个属性组成（一个watcher对应多个dep）\r\n         */\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    notify(){\r\n        this.subs.forEach(watcher => watcher.update()); // 告诉watcher应该更新\r\n    }\r\n}\r\n\r\nDep.target = null;\r\n\r\n// 维护一个栈型结构\r\nlet stack = []\r\nexport function pushStack(watcher) {\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popStack() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep;","// 将vm._update(vm._render())封装成为一个watcher\r\n\r\nimport Dep, { popStack, pushStack } from \"./dep\";\r\n\r\n/**\r\n * 组件化的好处：复用性强、方便维护、局部渲染提高性能\r\n */\r\n\r\nlet id = 0 ; // 记录每次创建的watcher\r\n\r\n/**\r\n * 1) 当我们创建渲染watcher的时候，我们会把当前的渲染watcher放在Dep.target上\r\n * 2) 调用_render会取值 走到watcher的get上\r\n */\r\n\r\n// 每个属性有dep 每个属性就是一个被观察者 watcher是一个观察者 当属性改变会通知watcher去更新\r\nclass Watcher{ // 不同组件有不同的watcher\r\n    constructor(vm,fn,options){ //fn代表的是渲染的方法\r\n        this.id = id++; // 将id作为每一个watcher的唯一标识\r\n        this.renderWatcher = options; // options 代表是否为一个渲染Watcher\r\n        this.getter = fn; // getter意味着调用这个函数可以发生取值\r\n        this.deps=[];// 计算属性\r\n        this.vm = vm\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy; // 缓存值\r\n        this.lazy?undefined : this.get()\r\n        \r\n    }\r\n    evaluate(){\r\n        this.value =  this.get(); // 获取到用户的函数返回值 并且标识为脏\r\n        this.dirty = false\r\n    }\r\n    get(){\r\n        pushStack(this)\r\n        // Dep.target = this; // 给Dep类上增添了一个静态属性(只有一份)\r\n        let value = this.getter.call(this.vm) // 会在vm上取值 \r\n        // Dep.target = null; // 渲染完毕后就清空\r\n        popStack();\r\n        return value\r\n    }\r\n    addDep(dep){ // 一个组件对应多个属性 重复属性不用记录\r\n       let id = dep.id\r\n       if (!this.depsId.has(id)) {\r\n           this.deps.push(dep) \r\n           this.depsId.add(id) \r\n           dep.addSub(this) //此时watcher已经记住了dep了同时去重了，此时dep也记住了watcher\r\n       }\r\n    }\r\n    depend(){\r\n        let i = this.deps.length \r\n        while (i--) {\r\n            this.deps[i].depend(); //让计算属性watcher也收集渲染watcher\r\n        }\r\n    }\r\n    update(){\r\n        // this.get() // 重新更新渲染 这样会立即更新 性能消耗太大\r\n        if(this.lazy){ \r\n            // 如果是计算属性 当依赖的值发生了变化 就标识计算属性是脏值\r\n            this.dirty = true\r\n\r\n        } else {\r\n\r\n            queueWatcher(this) // 将当前的watcher传进去\r\n        }\r\n    }\r\n    run(){\r\n        this.get()\r\n    }\r\n}\r\nfunction flashSchedulerQueue(){\r\n    let flashQueue = queue.slice(0)\r\n    queue = []\r\n    has = {}\r\n    pending = false\r\n    flashQueue.forEach(q => q.run()) // 在刷新的过程中可能还有新的watcher 重新放到queue中\r\n}\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false; // 防抖\r\nfunction queueWatcher(watcher){\r\n    const id =watcher.id\r\n    if (!(has[id])) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        // 不管update执行多少次 但只执行一轮刷新操作\r\n        if (!pending) {  // 只会被执行一次\r\n            nextTick(flashSchedulerQueue)\r\n            pending = true\r\n        }\r\n    }\r\n}\r\nlet callbacks = [];\r\nlet waiting = false\r\n\r\nfunction flashCallbacks(){\r\n    let flashCallBack = callbacks.slice(0);\r\n    callbacks = []\r\n    waiting = false\r\n    flashCallBack.forEach(cb => cb()); // 按照顺序执行\r\n}\r\n\r\n// nextTick 源码中没有直接使用哪个api也没有使用定时器 而是采用了优雅降级的方法\r\n/**\r\n * 优雅降级的方式\r\n *  vue2内部先采用 promise（ie不兼容） MutationObserver H5的api  可以考虑ie专享的 setImmeduate  setTimeout\r\n */ \r\nlet timerFunc;\r\nif (Promise) {\r\n    timerFunc= () => {\r\n        Promise.resolve().then(flashCallbacks); // vue3中直接采用的是这种方法\r\n    }\r\n} else if(MutationObserver){\r\n    let observe = new MutationObserver(flashCallbacks); // 这里的传入是异步执行的\r\n    let textNode = document.createTextNode(1)\r\n    observe.observe(textNode,{\r\n        characterData:true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if(setImmediate){\r\n    timerFunc = () => {\r\n        setImmediate(flashCallbacks)\r\n    }\r\n}else {\r\n    timerFunc = () => {\r\n        setTimeout(() => {\r\n        flashCallbacks()\r\n    },0)\r\n}\r\n}\r\n// 刷新使用定时器是一部操作 将任务放进队列中是同步\r\nexport function nextTick(cb){\r\n    callbacks.push(cb); // 维护nextTick中的callback方法  \r\n    if (!waiting) {\r\n        timerFunc() // 最后一起刷新\r\n        waiting = true\r\n    }\r\n}\r\n\r\n// 需要给每个属性增加一个dep，目的就是收集watcher\r\n// n个属性会对应一个视图 n个dep对应一个watcher\r\n// 1个属性对应着多个组件 1个dep对应多个watcher\r\n\r\nexport default Watcher","// 创建元素 _c() h()\r\nexport function createElementVNode(vm,tag,data,...children) {\r\n    if (data === null) {\r\n        data = {}\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm,tag,key,data,children)\r\n}\r\n\r\n// _v\r\nexport function createTextVNode(vm,text) {\r\n    return vnode(vm,undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\n// ast做的是语法层面的转化 他描述的是语法本身 (描述的是js css html语言)\r\n// render方法生成的虚拟DOM 描述的是DOM元素 可以增加一些自定义的属性 (描述的是DOM)\r\nfunction vnode(vm,tag,key,data,children,text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}","import Watcher from \"./observe/wtacher\";\r\nimport { createElementVNode,createTextVNode } from \"./vdom/index\"\r\n\r\n\r\nfunction createElm(vnode) {\r\n    let {tag,data,children,text} = vnode; // 对 vnode进行解构\r\n    if (typeof tag === 'string') { // 标签\r\n        vnode.el = document.createElement(tag); //将真实节点和虚拟节点对应起来，后续可以查找虚拟节点所对应的真实节点进行属性修改  \r\n\r\n        patchProps(vnode.el,data); // 给DOM增加属性\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child)) // 将子元素添加进父元素中\r\n            \r\n        }); \r\n    } else {\r\n       vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el,props) {\r\n    for (const key in props) {\r\n        if(key === 'style'){\r\n            for (const styleName in props.style) {\r\n               el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n\r\n            el.setAttribute(key,props[key])\r\n        }\r\n    }\r\n}\r\n\r\nfunction patch(oldVNode,vnode) {\r\n    // 初渲染 对oldVNode进行判断\r\n    const isRealElement = oldVNode.nodeType;\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElement = elm.parentNode  // 拿到父元素\r\n        let newElement = createElm(vnode); // 创建出真实的DOM\r\n        // 将新的元素追加进去\r\n        parentElement.insertBefore(newElement,elm.nextSibling)\r\n        parentElement.removeChild(elm) // 删除老的元素\r\n        // console.log(newElement);\r\n\r\n        return newElement\r\n        \r\n    } else {\r\n        // 更新 diff算法\r\n    }\r\n    \r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    // _c('div',{},children)\r\n    Vue.prototype._c = function(){\r\n        return createElementVNode(this,...arguments)\r\n    }\r\n    // _v(text)\r\n    Vue.prototype._v = function(){\r\n        return createTextVNode(this,...arguments)\r\n\r\n    }\r\n    Vue.prototype._s = function(value){\r\n        if (typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function(){\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        const vm = this\r\n        // 直接return render生成虚拟DOM 让with上的this指向vm\r\n        return vm.$options.render.call(vm); // 这里的render是之前通过ast语法树转义后生成的render方法\r\n    }\r\n    Vue.prototype._update = function(vnode){ // 将vnode转化成真实DOM\r\n        const vm = this;\r\n        const el = vm.$el\r\n        // console.log(vm,el);\r\n        // console.log(\"update\",vnode);\r\n        // patch既有初始化的功能又有更新的功能\r\n        vm.$el = patch(el,vnode)\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm,el) {\r\n\r\n    vm.$el = el; // 将el挂载在实例上 这里的el是经过querySelector处理过的\r\n    // 1.调用render方法生成虚拟DOM\r\n    //  vm._render(); // 源码中调用的是_render()方法 实际上就是vm.$options.render()\r\n    const updateComponent = () => {\r\n         vm._update(vm._render()); //_update()就是将虚拟节点变成真实节点\r\n     }\r\n     new Watcher(vm,updateComponent,true); // true用于标识是一个渲染watcher\r\n    // 2.根据虚拟DOM产生真实的DOM\r\n    // 3.插入到el元素中\r\n\r\n\r\n}\r\n\r\n\r\n// vue的核心流程 1) 创造了响应式数据 2) 模板转换成ast语法树 \r\n//3) 将ast语法树转换成了render函数 4)后续数据更新只执行render函数(无需再次执行ast转化过程)\r\n// render函数会产生虚拟节点(使用响应式数据 => 数据驱动)\r\n// 根据生成的虚拟节点创造出真实的DOM\r\n\r\n\r\nexport function callHook(vm,hook) { // 调用钩子函数\r\n    const handlers = vm.$options[hook];\r\n    if (handlers&&handlers.length > 0) {\r\n        handlers.forEach(handler => handler.call(vm))\r\n    }\r\n}","// 我们 希望重写数组中的部分方法\r\nlet oldArrayProtp = Array.prototype; // 获取数组的原型\r\n\r\n// newArrayProto.__proto__ = oldArrayProtp\r\nexport let newArrayProto = Object.create(oldArrayProtp);\r\nlet methods = [ // 找到所有的变异方法(能够修改原数组的方法)\r\n  'push',\r\n  \"pop\",\r\n  \"shift\",\r\n  \"unshift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\"\r\n]// concat slice 都不会改变原来的数组\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args){ // 重写数组的方法\r\n        // push()\r\n        const result = oldArrayProtp[method].call(this,...args) // 内部调用原来的方法 函数的方式进行劫持 切片编程\r\n\r\n        // 我们需要都再次新增的属性进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift': // ...args都是新增的值  \r\n            inserted = args   \r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // console.log(inserted); // inserted 是一个数组\r\n        if (inserted) { // 对新增的内容再次进行观测\r\n            ob.observeArray(inserted)\r\n            // console.log('更新');\r\n        }\r\n        ob.dep.notify(); // 数组变化了 通知对应的watcher实现更新\r\n        // console.log('method',method);\r\n        return result\r\n    }\r\n})","import { newArrayProto } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nclass Observe{\r\n    constructor(data){\r\n\r\n        // 给每个对象都增加收集\r\n        this.dep = new Dep()\r\n\r\n        // Object.defineProperty只能劫持已经存在的属性 (Vue里面会后增 删除的属性单独写一些api $set $delete)\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n        // data.__ob__ = this // 给数据加了一个标识，如果数据上有__ob__，则表示该数据被观察过了\r\n        if (Array.isArray(data)) {\r\n            // 这里我们可以重写数组中的方法 7个变异方法 可以修改数组本身\r\n            data.__proto__ = newArrayProto // 需要保留数组原有的特性，并且可以重写部分方法\r\n            // this.observeArray(data) // 可以对数组中的对象进行劫持\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    }\r\n    walk(data){ // 循环对象 对属性进行依次劫持\r\n        // '重新定义'属性\r\n        Object.keys(data).forEach(key => defineReactive(data,key,data[key]))\r\n    }\r\n    observeArray(data){ // 观察数组\r\n        //遍历循环\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n// 深层次嵌套会递归，递归多了性能变差，不存在的属性监控不到 存在的属性重写方法 vue3使用的是proxy\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        let current = value[i]\r\n        current.__ob__&& current.__ob__.dep.depend();\r\n        if (Array.isArray(current)) {\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\nexport function defineReactive(target,key,value){ // 闭包 属性劫持 value可能是一个对象\r\n    let childOb =  observe(value); // 对所有的对象都进行属性劫持 childOb.dep用来了收集依赖\r\n    let dep = new Dep(); // 给每个属性都增加一个dep\r\n    Object.defineProperty(target,key,{\r\n        get(){ //取值的时候会执行get\r\n            // console.log('key',key);\r\n            if (Dep.target) {\r\n                dep.depend(); // 让这个属性收集器记住当前的watcher\r\n                if (childOb) {\r\n                    childOb.dep.depend(); // 让数组和对象本身也收集依赖\r\n                    if (Array.isArray(value)) {\r\n                        dependArray(value)\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue){ // 修改的时候会执行set\r\n            if(newValue === value) return\r\n            observe(newValue);\r\n            value = newValue\r\n            dep.notify(); // 通知更新\r\n        },\r\n    })\r\n\r\n}\r\nexport function observe(data){\r\n    // 对对象进行劫持\r\n    if (typeof data !== 'object' || data === null) return; // 只对象进行劫持\r\n    if(data.__ob__ instanceof Observe){ // 这个对象被代理过了\r\n        return data.__ob__\r\n    }\r\n    // 如果一个对象被劫持过了，那就不惜要再被劫持了(要判断一个对象是否被劫持过，可以添加一个实例，通过实例来判断)\r\n    return new Observe(data)\r\n    // console.log(data);\r\n}","import Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher from \"./observe/wtacher\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options; // 获取到所有的选项\r\n    if (opts.data) {\r\n        initData(vm); //初始化数据\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n\r\n}\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key]\r\n        },\r\n        set(newValue) {\r\n            if (vm[target][key] === newValue) return\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data; // data 可能是函数或对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n    vm._data = data\r\n    // 拿到数据之后需要对数据进行劫持 vue2中采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data用vm来代理\r\n    for (const key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n\r\n}\r\nfunction initComputed(vm) {\r\n    // debugger\r\n    const computed = vm.$options.computed\r\n    let watchers = vm._computedWatchers = {}; // 将计算属性的watcher挂载到vm上\r\n    for (let key in computed) {\r\n        // computed[key] 有可能是一个函数 也有可能是一个对象\r\n        let userDef = computed[key]\r\n        // 需要监控计算属性中get的变化\r\n        let fn = typeof userDef === 'function'? userDef: userDef.get\r\n        // 如果直接new watcher会立即执行fn 将属性和watcher对应起来\r\n        watchers[key] = new Watcher(vm,fn,{lazy:true})\r\n        // const getter = typeof userDef === 'function'? userDef: userDef.get\r\n        // const setter =  userDef.set || (() => {})\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n    const setter = userDef.set || (() => { })\r\n    // 可以通过实例拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get:createComputedGetter(key),\r\n        set:setter\r\n    })\r\n}\r\n\r\n// Vue2中 计算属性根本就不会去收集依赖，只会让自己的依赖属性去收集依赖\r\nfunction createComputedGetter(key) {\r\n    // 我们要检测是否要执行这个getter\r\n    return function () {\r\n       const watcher = this._computedWatchers[key]; // 获取到对应属性的watcher\r\n       if (watcher.dirty) {\r\n        //    debugger\r\n           // 如果是脏的就去执行 用户传入的函数\r\n           watcher.evaluate(); // 求值后dirty变为了false，下次就不需要再次求值\r\n       }\r\n       if (Dep.target) { // 计算属性出栈后，还要渲染watcher 应该让计算属性watcher里面的属性也去收集上层watcher\r\n           watcher.depend();\r\n       }\r\n       return watcher.value; //最后返回的是watcher上\r\n    }\r\n}","import { compileToFunction } from \"./compiler/index\"\r\nimport { callHook, mountComponent } from \"./lifecycle\"\r\nimport { initState } from \"./state\"\r\nimport { mergeOptions } from \"./utils\"\r\n\r\nexport function initMixin(Vue){ // 给Vue增加init的方法\r\n    Vue.prototype._init = function (options){ // 在Vue的原型上定义初始化方法,data、methods\r\n        // 以$开头的话 会被Vue识别为自己的属性\r\n        // vue vm.$options 就是获取用户的配置\r\n        const vm = this\r\n        vm.$options = mergeOptions(this.constructor.options,options)  // 将用户的选项挂载到实例上  将用户选项和全局的选项进行合并\r\n        // console.log(vm.$options);\r\n        callHook(vm,'beforeCreate'); // 初始化之前执行beforeCreate\r\n        // 初始化状态\r\n        initState(vm)\r\n        callHook(vm,'created'); // 初始化完成后执行创建函数\r\n        if (options.el) {\r\n            vm.$mount(options.el); // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el){\r\n        const vm = this;\r\n        el = document.querySelector(el); // 拿到当前的DOM元素\r\n        let ops = vm.$options\r\n        // render() > template >el\r\n        if (!ops.render) { // 先查找有没有render函数\r\n            let template; // 没有render则看一下是否写了template,没写template采用外部的template\r\n            if (!ops.template && el) { // 没有写模板 但是写了el的话 就将el当成是模板\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template // 如果有el 则采用模板的内容\r\n                }\r\n            }\r\n            // 写了template 就用template\r\n            if (template) {\r\n                // 对template进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n            }\r\n            // console.log(template);\r\n        }\r\n        // console.log(ops.render);\r\n        //  ops.render; //最后就可以获取render方法\r\n        \r\n        mountComponent(vm,el); // 组件的挂载\r\n        // 通过script 标签引用的vue.global.js 这个的编译过程是在浏览器运行的\r\n        // runtime是不包含模板编译的，整个的编译是打包的时候通过loader来转义.vue文件 用runtime的时候不能使用template\r\n    }\r\n}","import { initGlobalAPI } from \"./gloablApi\";\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/wtacher\";\r\n\r\nfunction Vue(options) { // options就是用户的选项 包括 data,methods等\r\n    this._init(options)\r\n}\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue); // 拓展了init方法  见原型上的方法拓展成一个个的函数 通过函数的方式在去原型上拓展功能\r\ninitLifeCycle(Vue);\r\ninitGlobalAPI(Vue)\r\n\r\nVue.prototype.$watch = function(exprOrFn,cb,options) {\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Vue"],"names":["id"],"mappings":"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"}